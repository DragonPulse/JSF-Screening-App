package com.ness.screening.entity;

// default package
// Generated Dec 22, 2015 3:05:04 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.CascadeType;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * CandidateScreenDetails generated by hbm2java
 */
@Entity
@Table(name = "candidate_screen_details", catalog = "Ness_Tech_Screen")
public class CandidateScreenDetails implements java.io.Serializable {

	private Integer candidateScreenDetailsId;
	private User candidateScreenedBy;
	private Date candidateScreenedDate;
	private String candidateScreenedType;
	private String candidateScreenedComments;
	private Candidate candidate;

	public CandidateScreenDetails() {
	}

	public CandidateScreenDetails(User candidateScreenedBy,
			Date candidateScreenedDate, String candidateScreenedType,
			String candidateScreenedComments, Candidate candidate) {
		this.candidateScreenedBy = candidateScreenedBy;
		this.candidateScreenedDate = candidateScreenedDate;
		this.candidateScreenedType = candidateScreenedType;
		this.candidateScreenedComments = candidateScreenedComments;
		this.candidate = candidate;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "Candidate_Screen_details_Id", unique = true, nullable = false)
	public Integer getCandidateScreenDetailsId() {
		return this.candidateScreenDetailsId;
	}

	public void setCandidateScreenDetailsId(Integer candidateScreenDetailsId) {
		this.candidateScreenDetailsId = candidateScreenDetailsId;
	}

	@OneToOne(cascade=CascadeType.ALL,fetch=FetchType.EAGER)
    @JoinColumn(name="Candidate_Screened_By",insertable=true,
        updatable=true,nullable=true,unique=true)
	public User getCandidateScreenedBy() {
		return this.candidateScreenedBy;
	}

	public void setCandidateScreenedBy(User candidateScreenedBy) {
		this.candidateScreenedBy = candidateScreenedBy;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "Candidate_Screened_Date", length = 10)
	public Date getCandidateScreenedDate() {
		return this.candidateScreenedDate;
	}

	public void setCandidateScreenedDate(Date candidateScreenedDate) {
		this.candidateScreenedDate = candidateScreenedDate;
	}

	@Column(name = "Candidate_Screened_Type")
	public String getCandidateScreenedType() {
		return this.candidateScreenedType;
	}

	public void setCandidateScreenedType(String candidateScreenedType) {
		this.candidateScreenedType = candidateScreenedType;
	}

	@Column(name = "Candidate_Screened_Comments")
	public String getCandidateScreenedComments() {
		return this.candidateScreenedComments;
	}

	public void setCandidateScreenedComments(String candidateScreenedComments) {
		this.candidateScreenedComments = candidateScreenedComments;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "candidate_Id")
	public Candidate getCandidate() {
		return candidate;
	}

	public void setCandidate(Candidate candidate) {
		this.candidate = candidate;
	}

	

}
